name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"
      
    - name: Upload coverage reports to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        files: '**/coverage.cobertura.xml'
        fail_ci_if_error: false
        
    - name: Pack NuGet package
      run: dotnet pack --configuration Release --no-build --output ./artifacts
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
        retention-days: 30
        
  sample-test:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run sample application
      run: dotnet run --project samples/Sample.Console --configuration Release --no-build
      
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Check formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic
      
    - name: Run static analysis
      run: |
        dotnet build --configuration Release --verbosity normal -p:TreatWarningsAsErrors=true
        
  publish-preview:
    runs-on: ubuntu-latest
    needs: [build-and-test, sample-test, code-quality]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build and pack preview
      run: |
        VERSION_SUFFIX=preview-$(date +%Y%m%d%H%M%S)
        dotnet pack --configuration Release --version-suffix $VERSION_SUFFIX --output ./artifacts
        
    - name: Upload preview artifacts
      uses: actions/upload-artifact@v4
      with:
        name: preview-packages
        path: ./artifacts/*.nupkg
        retention-days: 7